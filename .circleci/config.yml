version: '2.1'
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  docker: circleci/docker@2.1.4
jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

     # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
  build_docker:
    docker:
      # Use the same Docker base as the project
      - image: cimg/base:2022.06

    working_directory: ~/app
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
         name: build and push docker image
         command: |
            docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PSWD}
            docker build --tag=udacitycapstone .
            docker image ls
            docker tag udacitycapstone shobhitgupta1982/udacitycapstone
            docker push shobhitgupta1982/udacitycapstone
  create-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
        default: udacity-capstone1

    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
              | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: udacity-capstone1
          node-type: t3.medium
          show-eksctl-command: true
  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
           cluster-name: << parameters.cluster-name >>
           aws-region: ${AWS_REGION}
                
      - run:
          command: |
            kubectl get services
          name: Test cluster
  create-deployment:
    docker:
      # Use the same Docker base as the project
      - image: cimg/base:2022.06
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: ${AWS_REGION}
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: deployment.yml
          resource-name: deployments/udacitycapstone
      - kubernetes/create-or-update-resource:
          resource-file-path: service.yml
          get-rollout-status: true
workflows:
  deployment:
    jobs:
#      - aws-eks/delete-cluster:
#           cluster-name: udacity-capstone
      - build
      - build_docker:
         requires:
          - build
      - aws-eks/create-cluster:
          cluster-name: udacity-capstone1
          requires:
            - build_docker
      - create-cluster:
           cluster-name: udacity-capstone1
      - test-cluster:
          cluster-name: udacity-capstone1
          requires:
            - create-cluster
      - create-deployment:
          cluster-name: udacity-capstone1
          requires:
            - test-cluster

     
