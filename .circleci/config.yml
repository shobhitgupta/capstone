version: '2.1'
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

     # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster
workflows:
   deployment :
     jobs:
       - build
#  deployment:
#    jobs:
#      - aws-eks/create-cluster:
#          cluster-name: udacity-capstone
#      - test-cluster:
#          cluster-name: udacity-capstone
#          requires:
#            - aws-eks/create-cluster
#      - aws-eks/delete-cluster:
#          cluster-name: udacity-capstone
#          requires:
#            - test-cluster
